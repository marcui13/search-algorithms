---
interface Props {
  algorithmId: string;
  title: string;
  width?: string;
  height?: string;
}

const { algorithmId, title, width = "100%", height = "400px" } = Astro.props;
---

<div class="visualization-container">
  <div class="visualization-header">
    <h3>🎬 {title} - Visualización Interactiva</h3>
    <div class="coming-soon-badge">Próximamente</div>
  </div>

  <div class="visualization-placeholder" style={`width: ${width}; height: ${height};`}>
    <div class="placeholder-content">
      <div class="placeholder-icon">
        <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
          <circle cx="12" cy="12" r="3"></circle>
          <path d="m12 1 0 6m0 6 0 6"></path>
          <path d="m21 12-6 0m-6 0-6 0"></path>
          <path d="m20.2 20.2-4.2-4.2m-3.6-3.6-4.2-4.2"></path>
          <path d="m20.2 3.8-4.2 4.2m-3.6 3.6-4.2 4.2"></path>
        </svg>
      </div>

      <h4>Animación Interactiva</h4>
      <p>
        Aquí podrás ver paso a paso cómo el algoritmo {title} explora
        los nodos del grafo y encuentra la solución.
      </p>

      <div class="future-features">
        <div class="feature-item">
          <span class="feature-icon">▶️</span>
          <span>Reproducción paso a paso</span>
        </div>
        <div class="feature-item">
          <span class="feature-icon">⏸️</span>
          <span>Control de velocidad</span>
        </div>
        <div class="feature-item">
          <span class="feature-icon">🎯</span>
          <span>Comparación entre algoritmos</span>
        </div>
        <div class="feature-item">
          <span class="feature-icon">📊</span>
          <span>Métricas en tiempo real</span>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .visualization-container {
    margin: 2rem 0;
    border: 1px solid var(--color-border);
    border-radius: 12px;
    overflow: hidden;
    background: var(--color-card-bg);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .visualization-container:hover {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }

  .visualization-header {
    background: var(--color-code-bg);
    padding: 1rem 1.5rem;
    border-bottom: 1px solid var(--color-border);
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
  }

  .visualization-header h3 {
    margin: 0;
    color: var(--color-text);
    font-size: 1.125rem;
    font-family: var(--font-mono);
  }

  .coming-soon-badge {
    background: linear-gradient(135deg, var(--color-warning), #fbbf24);
    color: white;
    padding: 0.375rem 0.75rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    animation: pulse 2s infinite;
  }

  .visualization-placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, var(--color-bg), var(--color-code-bg));
    position: relative;
    overflow: hidden;
  }

  .visualization-placeholder::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    animation: shimmer 3s infinite;
  }

  .placeholder-content {
    text-align: center;
    max-width: 500px;
    padding: 2rem;
    z-index: 1;
  }

  .placeholder-icon {
    color: var(--color-accent);
    margin-bottom: 1.5rem;
    animation: float 3s ease-in-out infinite;
  }

  .placeholder-content h4 {
    color: var(--color-text);
    font-size: 1.5rem;
    margin-bottom: 1rem;
    font-family: var(--font-mono);
  }

  .placeholder-content p {
    color: var(--color-text-muted);
    line-height: 1.6;
    margin-bottom: 2rem;
  }

  .future-features {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
  }

  .feature-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    background: var(--color-card-bg);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    font-size: 0.875rem;
    color: var(--color-text);
    transition: all 0.2s ease;
  }

  .feature-item:hover {
    border-color: var(--color-accent);
    transform: translateY(-1px);
  }

  .feature-icon {
    font-size: 1rem;
  }

  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.7; }
  }

  @keyframes shimmer {
    0% { left: -100%; }
    100% { left: 100%; }
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  @media (max-width: 768px) {
    .visualization-header {
      flex-direction: column;
      text-align: center;
      gap: 0.5rem;
    }

    .future-features {
      grid-template-columns: 1fr;
    }

    .placeholder-content {
      padding: 1.5rem;
    }
  }
</style>