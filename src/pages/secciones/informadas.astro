---
import Layout from '../../layouts/Layout.astro';
import SectionHero from '../../components/SectionHero.astro';
import AlgorithmCard from '../../components/AlgorithmCard.astro';
import { categories, getAlgorithmsByCategory } from '../../data/algorithms';

const section = categories['informadas'];
const algorithms = getAlgorithmsByCategory('informadas');
---

<Layout title={`${section.title} - Search Algorithms`} description={section.description}>
  <SectionHero
    title={section.title}
    subtitle={section.subtitle}
    description={section.description}
  />

  <section class="intro-section">
    <h2>El Poder de las Heur√≠sticas</h2>
    <p>
      Los algoritmos de b√∫squeda informada utilizan conocimiento espec√≠fico del problema
      en forma de heur√≠sticas para guiar la b√∫squeda hacia soluciones m√°s prometedoras.
      Esto puede reducir dram√°ticamente el tiempo de b√∫squeda comparado con m√©todos ciegos.
    </p>

    <div class="heuristic-explanation">
      <h3>¬øQu√© es una heur√≠stica?</h3>
      <p>
        Una heur√≠stica h(n) es una funci√≥n que estima el costo del camino m√°s barato
        desde el nodo n hasta un nodo objetivo. Una buena heur√≠stica debe ser:
      </p>
      <ul>
        <li><strong>Admisible:</strong> Nunca sobrestima el costo real (h(n) ‚â§ h*(n))</li>
        <li><strong>Consistente:</strong> h(n) ‚â§ c(n,n') + h(n') para cada sucesor n'</li>
        <li><strong>Informativa:</strong> Proporciona una buena gu√≠a hacia el objetivo</li>
      </ul>
    </div>
  </section>

  <section class="algorithms-section">
    <h2>Algoritmos de B√∫squeda Informada</h2>
    <div class="algorithms-grid">
      {algorithms.map(algo => (
        <AlgorithmCard
          title={algo.title}
          description={algo.description}
          href={`/algoritmos/${algo.id}`}
          complexity={algo.complexity.time}
          optimal={algo.optimal}
        />
      ))}
    </div>
  </section>

  <section class="heuristic-examples">
    <h2>Ejemplos de Heur√≠sticas</h2>
    <div class="examples-grid">
      <div class="example-card">
        <h3>üó∫Ô∏è Navegaci√≥n GPS</h3>
        <div class="example-content">
          <p><strong>Problema:</strong> Encontrar la ruta m√°s corta entre dos ciudades</p>
          <p><strong>Heur√≠stica:</strong> Distancia en l√≠nea recta (euclidiana) al destino</p>
          <div class="formula">h(n) = ‚àö[(x_objetivo - x_n)¬≤ + (y_objetivo - y_n)¬≤]</div>
          <p><strong>Propiedades:</strong> Admisible (nunca sobrestima la distancia real)</p>
        </div>
      </div>

      <div class="example-card">
        <h3>üß© Puzzle de 8 Fichas</h3>
        <div class="example-content">
          <p><strong>Problema:</strong> Ordenar fichas numeradas en una cuadr√≠cula 3x3</p>
          <p><strong>Heur√≠stica:</strong> Suma de distancias Manhattan de cada ficha</p>
          <div class="formula">h(n) = Œ£ |x_i - x_objetivo| + |y_i - y_objetivo|</div>
          <p><strong>Propiedades:</strong> Admisible y m√°s informativa que contar fichas mal colocadas</p>
        </div>
      </div>

      <div class="example-card">
        <h3>‚ôüÔ∏è Ajedrez</h3>
        <div class="example-content">
          <p><strong>Problema:</strong> Evaluar posiciones del tablero</p>
          <p><strong>Heur√≠stica:</strong> Valor material + posici√≥n + control del centro</p>
          <div class="formula">h(n) = Œ£ valor_piezas + bonus_posicional</div>
          <p><strong>Propiedades:</strong> No admisible, pero muy informativa para la toma de decisiones</p>
        </div>
      </div>
    </div>
  </section>

  <section class="comparison-section">
    <h2>A* vs Greedy: Una Comparaci√≥n</h2>
    <div class="vs-comparison">
      <div class="algorithm-comparison">
        <div class="algo-side a-star">
          <h3>üåü A* (A Estrella)</h3>
          <div class="formula-box">
            <div class="formula">f(n) = g(n) + h(n)</div>
            <p>Costo real + Heur√≠stica</p>
          </div>
          <ul class="pros-cons">
            <li class="pro">‚úÖ Garantiza optimalidad</li>
            <li class="pro">‚úÖ Completo</li>
            <li class="pro">‚úÖ Eficiente con buena heur√≠stica</li>
            <li class="con">‚ùå Usa m√°s memoria</li>
            <li class="con">‚ùå Puede ser m√°s lento que Greedy</li>
          </ul>
        </div>

        <div class="vs-divider">VS</div>

        <div class="algo-side greedy">
          <h3>‚ö° Greedy Best-First</h3>
          <div class="formula-box">
            <div class="formula">f(n) = h(n)</div>
            <p>Solo Heur√≠stica</p>
          </div>
          <ul class="pros-cons">
            <li class="pro">‚úÖ Muy r√°pido</li>
            <li class="pro">‚úÖ Menor uso de memoria</li>
            <li class="pro">‚úÖ Bueno para soluciones aproximadas</li>
            <li class="con">‚ùå No garantiza optimalidad</li>
            <li class="con">‚ùå Puede perderse</li>
          </ul>
        </div>
      </div>
    </div>
  </section>

  <section class="performance-section">
    <h2>Factores que Afectan el Rendimiento</h2>
    <div class="factors-grid">
      <div class="factor-card">
        <h3>üéØ Calidad de la Heur√≠stica</h3>
        <p>
          Una heur√≠stica m√°s informativa (sin dejar de ser admisible) reduce el n√∫mero
          de nodos explorados. La dominancia de heur√≠sticas es clave para el rendimiento.
        </p>
      </div>

      <div class="factor-card">
        <h3>üå≥ Factor de Ramificaci√≥n</h3>
        <p>
          Problemas con alto factor de ramificaci√≥n se benefician m√°s de heur√≠sticas
          informativas, ya que ayudan a podar m√°s ramas del √°rbol de b√∫squeda.
        </p>
      </div>

      <div class="factor-card">
        <h3>üìä Distribuci√≥n de Soluciones</h3>
        <p>
          Si hay muchas soluciones a diferentes profundidades, las heur√≠sticas ayudan
          a encontrar soluciones buenas m√°s r√°pidamente.
        </p>
      </div>

      <div class="factor-card">
        <h3>üíæ Limitaciones de Memoria</h3>
        <p>
          A* requiere almacenar muchos nodos. En problemas grandes, puede ser necesario
          usar variantes como IDA* (Iterative Deepening A*).
        </p>
      </div>
    </div>
  </section>

  <section class="next-section">
    <div class="next-content">
      <h2>Siguiente: B√∫squeda Local</h2>
      <p>
        Descubre algoritmos que operan sobre una soluci√≥n √∫nica, mejor√°ndola iterativamente
        para problemas de optimizaci√≥n.
      </p>
      <a href="/secciones/local" class="next-button">
        Explorar B√∫squeda Local ‚Üí
      </a>
    </div>
  </section>

  <style>
    .intro-section {
      margin-bottom: 4rem;
    }

    .intro-section h2 {
      font-size: 2rem;
      margin-bottom: 1.5rem;
      color: var(--color-text);
    }

    .intro-section p {
      font-size: 1.125rem;
      line-height: 1.7;
      color: var(--color-text-muted);
      margin-bottom: 2rem;
    }

    .heuristic-explanation {
      background: var(--color-code-bg);
      border: 1px solid #bae6fd;
      border-radius: 12px;
      padding: 2rem;
      margin: 2rem 0;
    }

    .heuristic-explanation h3 {
      color: var(--color-accent);
      margin-bottom: 1rem;
      font-size: 1.5rem;
    }

    .heuristic-explanation p {
      margin-bottom: 1rem;
      color: var(--color-text);
    }

    .heuristic-explanation ul {
      list-style: none;
      padding: 0;
    }

    .heuristic-explanation li {
      padding: 0.5rem 0;
      color: var(--color-text);
    }

    .algorithms-section {
      margin-bottom: 4rem;
    }

    .algorithms-section h2 {
      font-size: 2rem;
      margin-bottom: 2rem;
      color: var(--color-text);
      text-align: center;
    }

    .algorithms-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 1.5rem;
    }

    .heuristic-examples {
      margin-bottom: 4rem;
    }

    .heuristic-examples h2 {
      font-size: 2rem;
      margin-bottom: 2rem;
      color: var(--color-text);
      text-align: center;
    }

    .examples-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 1.5rem;
    }

    .example-card {
      background: var(--color-card-bg);
      border: 1px solid var(--color-border);
      border-radius: 8px;
      padding: 1.5rem;
      transition: transform 0.2s ease;
    }

    .example-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .example-card h3 {
      color: var(--color-accent);
      margin-bottom: 1rem;
      font-size: 1.25rem;
    }

    .example-content p {
      margin-bottom: 0.75rem;
      font-size: 0.9rem;
      color: var(--color-text-muted);
    }

    .formula {
      background: var(--color-code-bg);
      padding: 1rem;
      border-radius: 6px;
      font-family: var(--font-mono);
      font-size: 0.875rem;
      color: var(--color-accent);
      margin: 1rem 0;
      text-align: center;
    }

    .comparison-section {
      margin-bottom: 4rem;
    }

    .comparison-section h2 {
      font-size: 2rem;
      margin-bottom: 2rem;
      color: var(--color-text);
      text-align: center;
    }

    .vs-comparison {
      background: var(--color-card-bg);
      border: 1px solid var(--color-border);
      border-radius: 12px;
      padding: 2rem;
    }

    .algorithm-comparison {
      display: grid;
      grid-template-columns: 1fr auto 1fr;
      gap: 2rem;
      align-items: center;
    }

    .algo-side {
      text-align: center;
    }

    .algo-side h3 {
      margin-bottom: 1rem;
      font-size: 1.5rem;
    }

    .a-star h3 {
      color: #3b82f6;
    }

    .greedy h3 {
      color: #10b981;
    }

    .formula-box {
      background: var(--color-card-bg);
      border: 1px solid var(--color-border);
      border-radius: 8px;
      padding: 1.5rem;
      margin-bottom: 1.5rem;
    }

    .formula-box .formula {
      background: none;
      padding: 0;
      margin: 0 0 0.5rem 0;
      font-size: 1.25rem;
      font-weight: bold;
    }

    .formula-box p {
      margin: 0;
      font-size: 0.875rem;
      color: var(--color-text-muted);
    }

    .vs-divider {
      font-size: 2rem;
      font-weight: bold;
      color: var(--color-accent);
      text-align: center;
    }

    .pros-cons {
      list-style: none;
      padding: 0;
      text-align: left;
    }

    .pros-cons li {
      padding: 0.25rem 0;
      font-size: 0.875rem;
    }

    .pro {
      color: #059669;
    }

    .con {
      color: #dc2626;
    }

    .performance-section {
      margin-bottom: 4rem;
    }

    .performance-section h2 {
      font-size: 2rem;
      margin-bottom: 2rem;
      color: var(--color-text);
      text-align: center;
    }

    .factors-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1.5rem;
    }

    .factor-card {
      background: var(--color-card-bg);
      border: 1px solid var(--color-border);
      border-radius: 8px;
      padding: 1.5rem;
    }

    .factor-card h3 {
      color: var(--color-accent);
      margin-bottom: 1rem;
      font-size: 1.125rem;
    }

    .factor-card p {
      color: var(--color-text-muted);
      font-size: 0.9rem;
      line-height: 1.6;
      margin: 0;
    }

    .next-section {
      background: var(--color-code-bg);
      padding: 3rem 2rem;
      border-radius: 12px;
      text-align: center;
    }

    .next-content h2 {
      color: var(--color-text);
      margin-bottom: 1rem;
      font-size: 2rem;
    }

    .next-content p {
      color: var(--color-text-muted);
      font-size: 1.125rem;
      margin-bottom: 2rem;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }

    .next-button {
      display: inline-block;
      background: var(--color-accent);
      color: white;
      padding: 1rem 2rem;
      border-radius: 8px;
      text-decoration: none;
      font-weight: 600;
      transition: background-color 0.2s ease;
    }

    .next-button:hover {
      background: var(--color-accent-light);
    }

    @media (max-width: 768px) {
      .examples-grid {
        grid-template-columns: 1fr;
      }

      .algorithm-comparison {
        grid-template-columns: 1fr;
        gap: 1rem;
      }

      .vs-divider {
        order: -1;
        grid-column: span 3;
      }

      .factors-grid {
        grid-template-columns: 1fr;
      }

      .algorithms-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</Layout>